{"version":3,"sources":["Filter.jsx","PersonForm.jsx","Persons.jsx","services/personService.js","Notifications.jsx","EnvData.jsx","App.js","index.js"],"names":["Filter","_ref","setFilter","react_default","a","createElement","onChange","event","target","value","PersonForm","setNewName","newName","setNewNumber","newNumber","addNewPerson","onClick","type","Persons","persons","deletePerson","map","person","index","key","concat","id","name","number","PERSONS_API","process","personService","getPersons","_getPersons","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","axios","get","catch","error","console","log","response","abrupt","sent","stop","apply","this","arguments","createPerson","_createPerson","_callee2","_context2","post","_x","_deletePerson","_callee3","personId","_context3","delete","_x2","updatePerson","_updatePerson","_callee4","_context4","put","_x3","Notifications","notifications","notification","message","className","ERROR","SUCCESS","EnvData","App","_useState","useState","_useState2","slicedToArray","setPersons","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","filterValue","_useState9","_useState10","setNotifications","clearInputFields","showNotification","newNotification","notificationsCopy","toConsumableArray","setTimeout","pop","removeNotification","data","_ref2","newPersonList","find","window","confirm","filter","status","useEffect","personsList","length","toLowerCase","includes","src_Notifications","src_Filter","src_PersonForm","preventDefault","foundPerson","updatedPerson","objectSpread","updatedPersonsList","personsCopy","newPerson","push","src_Persons","src_EnvData","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.0813d579.chunk.js","sourcesContent":["import React from 'react';\n\nconst Filter = ({setFilter}) => {\n    return (\n        <div>\n            <form>\n                <div>\n                    Rajaa näytettäviä: <input onChange={(event) => setFilter(event.target.value)} />\n                </div>\n            </form>\n        </div>\n    );\n};\n\nexport default Filter;","import React from 'react';\n\nconst PersonForm = ({setNewName, newName, setNewNumber, newNumber, addNewPerson}) => {\n    return (\n        <form>\n            <div>\n                nimi: <input onChange={event => setNewName(event.target.value)} value={newName} />\n            </div>\n            <div>\n                numero: <input onChange={event => setNewNumber(event.target.value)} value={newNumber} />\n            </div>\n            <div>\n                <button onClick={addNewPerson} type=\"submit\">lisää</button>\n            </div>\n        </form>\n    );\n};\n\nexport default PersonForm;","import React from 'react';\n\nconst Persons = ({ persons, deletePerson }) => {\n    return (\n        <div>\n            {persons.map( (person, index) => {\n                return (\n                    <div key={`person-${person.id}-index-${index}`}>\n                        {`${person.name} ${person.number || ''}`}\n                        <button onClick={() => deletePerson(person.id)}>Poista</button>\n                    </div>\n                )}\n            )}\n        </div>\n    );\n};\n\nexport default Persons;","import axios from 'axios';\n\nconst API_URL = process.env.REACT_APP_API_URL;\nconst PERSONS_API = `${API_URL}/api/persons`;\n\nconst personService = {\n\n    getPersons: async () => {\n        return await axios.get(PERSONS_API)\n        .catch(error => {\n            console.log('Error GET /persons', error);\n            return error.response;\n        });\n    },\n\n    createPerson: async (person) => {\n        if (person) {\n            return await axios.post(PERSONS_API, person)\n            .catch(error => {\n                console.log('Error POST /persons', error);\n                return error.response;\n            });\n        }\n    },\n    deletePerson: async (personId) => {\n        if(personId) {\n            return await axios.delete(`${PERSONS_API}/${personId}`)\n            .catch( error => {\n                console.log(`ERROR DELETE /persons${personId}`,error.response);\n                return error.response;\n            })\n        }\n    },\n    updatePerson: async (person) => {\n        if(person) {\n            return await axios.put(`${PERSONS_API}/${person.id}`, person)\n            .catch( error => {\n                console.log(`ERROR PUT /persons/${person.id}`, error);\n                return error.response;\n            });\n        }\n    }\n}\n\nexport default personService;","import React from 'react';\nimport './notification.css';\n\nconst Notifications = ({notifications}) => {\n    return (\n        <ul>\n            {notifications.map( (notification, index) => <li key={`notification-${notification.message}-${index}`} className={`notification-${notification.type}`}>{notification.message}</li>)}\n        </ul>\n    );\n};\n\nNotifications.ERROR = 'error';\nNotifications.SUCCESS = 'success';\n\nexport default Notifications;","import React from 'react';\nconst ENVIRONMENT = process.env.REACT_APP_ENVIRONMENT;\nconst API_URL = process.env.REACT_APP_API_URL;\n\nconst EnvData = () => {\n    return (\n        <div>\n            <h6>{`Enviroment info (${ENVIRONMENT})`}</h6>\n            <p>{`API_URL: ${API_URL}`}</p>\n        </div>\n    );\n};\n\nexport default EnvData;","import React, { useState, useEffect } from 'react';\nimport Filter from './Filter';\nimport PersonForm from './PersonForm';\nimport Persons from './Persons';\nimport personService from './services/personService';\nimport Notifications from './Notifications';\nimport EnvData from './EnvData';\n\nconst App = () => {\n    const [persons, setPersons] = useState([]);\n    const [newName, setNewName] = useState('');\n    const [newNumber, setNewNumber] = useState('');\n    const [filterValue, setFilter] = useState('');\n    const [notifications, setNotifications] = useState([])\n\n    const clearInputFields = () => {\n        setNewName('');\n        setNewNumber('');\n    }\n    const removeNotification = (notifications) => {\n        const notificationsCopy = [...notifications];\n        notificationsCopy.pop();\n        setNotifications(notificationsCopy)\n    }\n\n    const showNotification = (message, type) => {\n        const newNotification = { message, type };\n        const notificationsCopy = [...notifications].concat([newNotification]);\n        setNotifications(notificationsCopy);\n\n        setTimeout(() => {removeNotification(notificationsCopy)}, 3000);\n    }\n\n    const getPersons = async () => {\n        const response = await personService.getPersons();\n        const { data } = response;\n        setPersons(data);\n    }\n    const addNewPerson = (event) => {\n        event.preventDefault();\n        const foundPerson = persons.find((person) => person.name === newName)\n        if (foundPerson) {\n            if (window.confirm(`${newName} on jo luettelossa. Korvataanko vanha numero uudella?`)) {\n                const updatedPerson = { ...foundPerson, number: newNumber }\n                const updatedPersonsList = persons.map(person => person.id === updatedPerson.id ? updatedPerson : person);\n                setPersons(updatedPersonsList);\n                personService.updatePerson(updatedPerson);\n                clearInputFields();\n            }\n        }\n        else {\n            const personsCopy = [...persons];\n            const newPerson = { name: newName, number: newNumber };\n\n            personsCopy.push(newPerson);\n            setPersons(personsCopy);\n            personService.createPerson(newPerson);\n            clearInputFields();\n            showNotification(`Lisättiin ${newPerson.name}.`, Notifications.SUCCESS);\n        }\n    }\n    const deletePerson = async (personId) => {\n        const person = persons.find(person => person.id === personId);\n        if (window.confirm(`Poistetaanko henkilö ${person.name}?`)) {\n            const newPersonList = persons.filter(person => person.id !== personId);\n            setPersons(newPersonList);\n            const response = await personService.deletePerson(personId);\n            if (response && response.status === 200) {\n                showNotification(`${person.name} poistettiin.`, Notifications.SUCCESS);\n            }\n            if(response && response.status === 404) {\n                showNotification(`Henkilö ${person.name} oli jo poistettu.`, Notifications.ERROR);\n            }\n            \n        }\n\n    }\n\n    useEffect(() =>{\n        getPersons();\n    }, []);\n\n    \n    const filteredResult = filterValue.length > 0 && persons.filter( person => person.name.toLowerCase().includes(filterValue.toLowerCase()));\n    const personsList = filteredResult || persons;\n    return (\n        <div>\n            <Notifications notifications={notifications} />\n            <h2>Puhelinluettelo</h2>\n            <Filter setFilter={setFilter}/>\n            <PersonForm \n                setNewName={setNewName}\n                newName={newName}\n                setNewNumber={setNewNumber}\n                newNumber={newNumber}\n                addNewPerson={addNewPerson}\n            />\n            <h2>Numerot</h2>\n            <Persons deletePerson={deletePerson} persons={personsList} />\n            <EnvData />\n        </div>\n    )\n\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}